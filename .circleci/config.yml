version: 2.1

executors:
  job-runner:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    environment:
      GO111MODULE: "on"
jobs:
  tests:
    executor: job-runner
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run: go test -v ./...
  scraper-image:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/scraper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f scraper/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG
  postgres-inserter-image:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/postgres-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f postgres-inserter/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  workflow:
    jobs:
      - tests
      - scraper-image:
          requires:
            - tests
          filters:
            branches:
              only: master
      - postgres-inserter-image:
          requires:
            - tests
          filters:
            branches:
              only: master
