version: 2.1

executors:
  job-runner:
    docker:
      - image: circleci/golang:1.13
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    environment:
      GO111MODULE: "on"
jobs:
  tests:
    executor: job-runner
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run: go test -v ./...
  scraper-image:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/insta_user-scraper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_user-scraper/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG
  postgres-inserter-image:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/insta_postgres-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_postgres-inserter/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG
  insta-comments-inserter:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/insta_comments-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_comments-inserter/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG
  insta-comments-scraper:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/insta_comments-scraper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_comments-scraper/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG
  insta-posts-inserter:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/insta-posts-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_posts-inserter/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG
  insta-posts-scraper:
    # specify the version
    executor: job-runner
    environment:
      SCRAPER_IMAGE_NAME: codesmag/insta_posts-scraper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_posts-scraper/Dockerfile -t $SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SCRAPER_IMAGE_NAME:latest $SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $SCRAPER_IMAGE_NAME:latest
            docker push $SCRAPER_IMAGE_NAME:$IMAGE_TAG

  twitter_scraper:
    # specify the version
    executor: job-runner
    environment:
      TWITTER_SCRAPER_IMAGE: codesmag/twitter_scraper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -t $TWITTER_SCRAPER_IMAGE twitter_scraper/
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $TWITTER_SCRAPER_IMAGE:latest $TWITTER_SCRAPER_IMAGE:$IMAGE_TAG
            docker push $TWITTER_SCRAPER_IMAGE:latest
            docker push $TWITTER_SCRAPER_IMAGE:$IMAGE_TAG

  postgres-setup:
    # specify the version
    executor: job-runner
    environment:
      SETUP_IMAGE_NAME: codesmag/postgres-setup
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f debezium/kubernetes/Dockerfile -t $SETUP_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SETUP_IMAGE_NAME:latest $SETUP_IMAGE_NAME:$IMAGE_TAG
            docker push $SETUP_IMAGE_NAME:latest
            docker push $SETUP_IMAGE_NAME:$IMAGE_TAG
  twitter_inserter_users:
    # specify the version
    executor: job-runner
    environment:
      TWITTER_INSERTER_USERS_IMAGE: codesmag/twitter_inserter_users
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f twitter_inserter_users/Dockerfile -t $TWITTER_INSERTER_USERS_IMAGE .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $TWITTER_INSERTER_USERS_IMAGE:latest $TWITTER_INSERTER_USERS_IMAGE:$IMAGE_TAG
            docker push $TWITTER_INSERTER_USERS_IMAGE:latest
            docker push $TWITTER_INSERTER_USERS_IMAGE:$IMAGE_TAG
  twitter_inserter_posts:
    # specify the version
    executor: job-runner
    environment:
      TWITTER_INSERTER_POSTS_IMAGE: codesmag/twitter_inserter_posts
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f twitter_inserter_posts/Dockerfile -t $TWITTER_INSERTER_POSTS_IMAGE .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $TWITTER_INSERTER_POSTS_IMAGE:latest $TWITTER_INSERTER_POSTS_IMAGE:$IMAGE_TAG
            docker push $TWITTER_INSERTER_POSTS_IMAGE:latest
            docker push $TWITTER_INSERTER_POSTS_IMAGE:$IMAGE_TAG
  insta_user_names-filter:
    # specify the version
    executor: job-runner
    environment:
      CHANGE_STREAM_IMAGE: codesmag/insta_user_names_filter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f kafka/changestream/Dockerfile -t $CHANGE_STREAM_IMAGE .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $CHANGE_STREAM_IMAGE:latest $CHANGE_STREAM_IMAGE:$IMAGE_TAG
            docker push $CHANGE_STREAM_IMAGE:latest
            docker push $CHANGE_STREAM_IMAGE:$IMAGE_TAG
  aws_service:
    # specify the version
    executor: job-runner
    environment:
      SERVICE_IMAGE: codesmag/aws_service
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f aws_service/Dockerfile -t $SERVICE_IMAGE .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $SERVICE_IMAGE:latest $SERVICE_IMAGE:$IMAGE_TAG
            docker push $SERVICE_IMAGE:latest
            docker push $SERVICE_IMAGE:$IMAGE_TAG
workflows:
  version: 2
  workflow:
    jobs:
      - tests
      - scraper-image:
          requires:
            - tests
          filters:
            branches:
              only: master
      - postgres-inserter-image:
          requires:
            - tests
          filters:
            branches:
              only: master
      - insta-comments-inserter:
          requires:
            - tests
          filters:
            branches:
              only: master
      - insta-comments-scraper:
          requires:
            - tests
          filters:
            branches:
              only: master
      - insta-posts-scraper:
          requires:
            - tests
          filters:
            branches:
              only: master
      - insta-posts-inserter:
          requires:
            - tests
          filters:
            branches:
              only: master
      - twitter_scraper:
          requires:
            - tests
          filters:
            branches:
              only: master
      - twitter_inserter_users:
          requires:
            - tests
          filters:
            branches:
              only: master
      - twitter_inserter_posts:
          requires:
            - tests
          filters:
            branches:
              only: master
      - postgres-setup:
          filters:
            branches:
              only: master
      - insta_user_names-filter:
          filters:
            branches:
              only: master
      - aws_service:
          filters:
            branches:
              only: master
