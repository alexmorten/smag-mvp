version: 2.1

executors:
  job-runner:
    docker:
      - image: circleci/golang:1.12
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    environment:
      GO111MODULE: "on"
jobs:
  tests:
    executor: job-runner
    steps:
      - checkout
      # specify any bash command here prefixed with `run: `
      - run: go test -v ./...
  insta_scraper-image:
    # specify the version
    executor: job-runner
    environment:
      INSTA_SCRAPER_IMAGE_NAME: codesmag/insta_scraper
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_scraper/Dockerfile -t $INSTA_SCRAPER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $INSTA_SCRAPER_IMAGE_NAME:latest $INSTA_SCRAPER_IMAGE_NAME:$IMAGE_TAG
            docker push $INSTA_SCRAPER_IMAGE_NAME:latest
            docker push $INSTA_SCRAPER_IMAGE_NAME:$IMAGE_TAG
  insta_postgres-inserter-image:
    # specify the version
    executor: job-runner
    environment:
      INSTA_POSTGRES_INSERTER_IMAGE_NAME: codesmag/insta_postgres-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f insta_postgres-inserter/Dockerfile -t $POSTGRES_INSERTER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $POSTGRES_INSERTER_IMAGE_NAME:latest $POSTGRES_INSERTER_IMAGE_NAME:$IMAGE_TAG
            docker push $POSTGRES_INSERTER_IMAGE_NAME:latest
            docker push $POSTGRES_INSERTER_IMAGE_NAME:$IMAGE_TAG

  neo4j-inserter-image:
    # specify the version
    executor: job-runner
    environment:
      NEO4J_INSERTER_IMAGE_NAME: codesmag/neo4j-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f neo4j-inserter/Dockerfile -t $NEO4J_INSERTER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $NEO4J_INSERTER_IMAGE_NAME:latest $NEO4J_INSERTER_IMAGE_NAME:$IMAGE_TAG
            docker push $NEO4J_INSERTER_IMAGE_NAME:latest
            docker push $NEO4J_INSERTER_IMAGE_NAME:$IMAGE_TAG
  dgraph-inserter-image:
    # specify the version
    executor: job-runner
    environment:
      DGRAPH_INSERTER_IMAGE_NAME: codesmag/dgraph-inserter
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: docker build -f dgraph-inserter/Dockerfile -t $DGRAPH_INSERTER_IMAGE_NAME .
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG=$(date "+%Y-%m-%dT%H-%M-%S")
            docker tag $DGRAPH_INSERTER_IMAGE_NAME:latest $DGRAPH_INSERTER_IMAGE_NAME:$IMAGE_TAG
            docker push $DGRAPH_INSERTER_IMAGE_NAME:latest
            docker push $DGRAPH_INSERTER_IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  workflow:
    jobs:
      - tests
      - insta_scraper-image:
          requires:
            - tests
          filters:
            branches:
              only: master
      - insta_postgres-inserter-image:
          requires:
            - tests
          filters:
            branches:
              only: master
      - neo4j-inserter-image:
          requires:
            - tests
          filters:
            branches:
              only: master
      - dgraph-inserter-image:
          requires:
            - tests
          filters:
            branches:
              only: master
